name: Build and Release

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build libxcursor-dev libxi-dev libgl1-mesa-dev libpng-dev libjpeg-dev zlib1g-dev

    - name: Set up dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install cmake ninja

    - name: Set up MSVC (Windows)
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -G "Ninja"

    - name: Build
      run: cmake --build build --config Release

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: aseprite-${{ matrix.os }}
        path: build/bin/*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
